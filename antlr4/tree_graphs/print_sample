digraph ParseTree {
node [shape=plaintext];
  1 [label="start_"];
  2 [label="statement"];
  3 [label="single_statement"];
  4 [label="single_declaration"];
  5 [label="variable_declaration"];
  6 [label="data_type"];
  7 [label="integer"];
  8 [label="int"];
  7 -> 8;
  6 -> 7;
  5 -> 6;
  9 [label="x"];
  5 -> 9;
  10 [label="="];
  5 -> 10;
  11 [label="expression"];
  12 [label="constant"];
  13 [label="2"];
  12 -> 13;
  11 -> 12;
  5 -> 11;
  4 -> 5;
  3 -> 4;
  2 -> 3;
  14 [label=";"];
  2 -> 14;
  1 -> 2;
  15 [label="statement"];
  16 [label="single_statement"];
  17 [label="single_declaration"];
  18 [label="variable_declaration"];
  19 [label="data_type"];
  20 [label="string"];
  21 [label="string"];
  20 -> 21;
  19 -> 20;
  18 -> 19;
  22 [label="s"];
  18 -> 22;
  23 [label="="];
  18 -> 23;
  24 [label="expression"];
  25 [label="constant"];
  26 [label="string_literal"];
  27 [label="\""];
  26 -> 27;
  28 [label="ola"];
  26 -> 28;
  29 [label="\""];
  26 -> 29;
  25 -> 26;
  24 -> 25;
  18 -> 24;
  17 -> 18;
  16 -> 17;
  15 -> 16;
  30 [label=";"];
  15 -> 30;
  1 -> 15;
  31 [label="statement"];
  32 [label="single_statement"];
  33 [label="printing_statement"];
  34 [label="print_statement"];
  35 [label="PRINT"];
  34 -> 35;
  36 [label="("];
  34 -> 36;
  37 [label="expression"];
  38 [label="constant"];
  39 [label="string_literal"];
  40 [label="\""];
  39 -> 40;
  41 [label="x"];
  39 -> 41;
  42 [label="="];
  39 -> 42;
  43 [label="\""];
  39 -> 43;
  38 -> 39;
  37 -> 38;
  34 -> 37;
  44 [label=","];
  34 -> 44;
  45 [label="expression"];
  46 [label="x"];
  45 -> 46;
  34 -> 45;
  47 [label=","];
  34 -> 47;
  48 [label="expression"];
  49 [label="constant"];
  50 [label="string_literal"];
  51 [label="\""];
  50 -> 51;
  52 [label=","];
  50 -> 52;
  53 [label="s"];
  50 -> 53;
  54 [label="="];
  50 -> 54;
  55 [label="\""];
  50 -> 55;
  49 -> 50;
  48 -> 49;
  34 -> 48;
  56 [label=","];
  34 -> 56;
  57 [label="expression"];
  58 [label="s"];
  57 -> 58;
  34 -> 57;
  59 [label=","];
  34 -> 59;
  60 [label="expression"];
  61 [label="constant"];
  62 [label="string_literal"];
  63 [label="\""];
  62 -> 63;
  64 [label="\n"];
  62 -> 64;
  65 [label="\""];
  62 -> 65;
  61 -> 62;
  60 -> 61;
  34 -> 60;
  66 [label=")"];
  34 -> 66;
  33 -> 34;
  32 -> 33;
  31 -> 32;
  67 [label=";"];
  31 -> 67;
  1 -> 31;
  68 [label="statement"];
  69 [label="single_statement"];
  70 [label="printing_statement"];
  71 [label="println_statement"];
  72 [label="PRINTLN"];
  71 -> 72;
  73 [label="("];
  71 -> 73;
  74 [label="expression"];
  75 [label="constant"];
  76 [label="string_literal"];
  77 [label="\""];
  76 -> 77;
  78 [label="x"];
  76 -> 78;
  79 [label="="];
  76 -> 79;
  80 [label="\""];
  76 -> 80;
  75 -> 76;
  74 -> 75;
  71 -> 74;
  81 [label=","];
  71 -> 81;
  82 [label="expression"];
  83 [label="x"];
  82 -> 83;
  71 -> 82;
  84 [label=","];
  71 -> 84;
  85 [label="expression"];
  86 [label="constant"];
  87 [label="string_literal"];
  88 [label="\""];
  87 -> 88;
  89 [label=","];
  87 -> 89;
  90 [label="s"];
  87 -> 90;
  91 [label="="];
  87 -> 91;
  92 [label="\""];
  87 -> 92;
  86 -> 87;
  85 -> 86;
  71 -> 85;
  93 [label=","];
  71 -> 93;
  94 [label="expression"];
  95 [label="s"];
  94 -> 95;
  71 -> 94;
  96 [label=")"];
  71 -> 96;
  70 -> 71;
  69 -> 70;
  68 -> 69;
  97 [label=";"];
  68 -> 97;
  1 -> 68;
  98 [label="statement"];
  99 [label="single_statement"];
  100 [label="printing_statement"];
  101 [label="printf_statement"];
  102 [label="PRINTF"];
  101 -> 102;
  103 [label="("];
  101 -> 103;
  104 [label="string_literal"];
  105 [label="\""];
  104 -> 105;
  106 [label="x"];
  104 -> 106;
  107 [label="="];
  104 -> 107;
  108 [label="{"];
  104 -> 108;
  109 [label="}"];
  104 -> 109;
  110 [label=","];
  104 -> 110;
  111 [label="s"];
  104 -> 111;
  112 [label="="];
  104 -> 112;
  113 [label="{"];
  104 -> 113;
  114 [label="}"];
  104 -> 114;
  115 [label="\n"];
  104 -> 115;
  116 [label="\""];
  104 -> 116;
  101 -> 104;
  117 [label=","];
  101 -> 117;
  118 [label="expression"];
  119 [label="x"];
  118 -> 119;
  101 -> 118;
  120 [label=","];
  101 -> 120;
  121 [label="expression"];
  122 [label="s"];
  121 -> 122;
  101 -> 121;
  123 [label=")"];
  101 -> 123;
  100 -> 101;
  99 -> 100;
  98 -> 99;
  124 [label=";"];
  98 -> 124;
  1 -> 98;
  125 [label="<EOF>"];
  1 -> 125;
}
