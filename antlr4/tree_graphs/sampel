digraph ParseTree {
node [shape=plaintext];
  1 [label="start_"];
  2 [label="statement"];
  3 [label="block_statement"];
  4 [label="block_declaration"];
  5 [label="function_definition"];
  6 [label="DEF"];
  5 -> 6;
  7 [label="data_type"];
  8 [label="void"];
  9 [label="void"];
  8 -> 9;
  7 -> 8;
  5 -> 7;
  10 [label="main"];
  5 -> 10;
  11 [label="("];
  5 -> 11;
  12 [label="data_type"];
  13 [label="integer"];
  14 [label="int"];
  13 -> 14;
  12 -> 13;
  5 -> 12;
  15 [label="x"];
  5 -> 15;
  16 [label=","];
  5 -> 16;
  17 [label="data_type"];
  18 [label="string"];
  19 [label="string"];
  18 -> 19;
  17 -> 18;
  5 -> 17;
  20 [label="args"];
  5 -> 20;
  21 [label=")"];
  5 -> 21;
  22 [label=":"];
  5 -> 22;
  23 [label="statement"];
  24 [label="single_statement"];
  25 [label="single_declaration"];
  26 [label="variable_declaration"];
  27 [label="data_type"];
  28 [label="string"];
  29 [label="string"];
  28 -> 29;
  27 -> 28;
  26 -> 27;
  30 [label="s"];
  26 -> 30;
  31 [label="="];
  26 -> 31;
  32 [label="expression"];
  33 [label="constant"];
  34 [label="string_literal"];
  35 [label="\""];
  34 -> 35;
  36 [label="siema"];
  34 -> 36;
  37 [label="\""];
  34 -> 37;
  33 -> 34;
  32 -> 33;
  26 -> 32;
  25 -> 26;
  24 -> 25;
  23 -> 24;
  38 [label=";"];
  23 -> 38;
  5 -> 23;
  39 [label="return_statement"];
  40 [label="RETURN"];
  39 -> 40;
  41 [label=";"];
  39 -> 41;
  5 -> 39;
  4 -> 5;
  3 -> 4;
  2 -> 3;
  42 [label="END"];
  2 -> 42;
  1 -> 2;
  43 [label="statement"];
  44 [label="single_statement"];
  45 [label="single_declaration"];
  46 [label="variable_declaration"];
  47 [label="data_type"];
  48 [label="integer"];
  49 [label="int"];
  48 -> 49;
  47 -> 48;
  46 -> 47;
  50 [label="x"];
  46 -> 50;
  51 [label=","];
  46 -> 51;
  52 [label="y"];
  46 -> 52;
  53 [label=","];
  46 -> 53;
  54 [label="z"];
  46 -> 54;
  45 -> 46;
  44 -> 45;
  43 -> 44;
  55 [label=";"];
  43 -> 55;
  1 -> 43;
  56 [label="statement"];
  57 [label="single_statement"];
  58 [label="single_declaration"];
  59 [label="container_declaration"];
  60 [label="container_type"];
  61 [label="stack"];
  62 [label="STACK"];
  61 -> 62;
  60 -> 61;
  59 -> 60;
  63 [label="<"];
  59 -> 63;
  64 [label="data_type"];
  65 [label="integer"];
  66 [label="int"];
  65 -> 66;
  64 -> 65;
  59 -> 64;
  67 [label=">"];
  59 -> 67;
  68 [label="stack"];
  59 -> 68;
  58 -> 59;
  57 -> 58;
  56 -> 57;
  69 [label=";"];
  56 -> 69;
  1 -> 56;
  70 [label="statement"];
  71 [label="single_statement"];
  72 [label="method_call"];
  73 [label="stack"];
  72 -> 73;
  74 [label="."];
  72 -> 74;
  75 [label="push"];
  72 -> 75;
  76 [label="("];
  72 -> 76;
  77 [label="expression"];
  78 [label="x"];
  77 -> 78;
  72 -> 77;
  79 [label=")"];
  72 -> 79;
  71 -> 72;
  70 -> 71;
  80 [label=";"];
  70 -> 80;
  1 -> 70;
  81 [label="statement"];
  82 [label="single_statement"];
  83 [label="method_call"];
  84 [label="stack"];
  83 -> 84;
  85 [label="."];
  83 -> 85;
  86 [label="push"];
  83 -> 86;
  87 [label="("];
  83 -> 87;
  88 [label="expression"];
  89 [label="constant"];
  90 [label="2"];
  89 -> 90;
  88 -> 89;
  83 -> 88;
  91 [label=")"];
  83 -> 91;
  82 -> 83;
  81 -> 82;
  92 [label=";"];
  81 -> 92;
  1 -> 81;
  93 [label="statement"];
  94 [label="single_statement"];
  95 [label="method_call"];
  96 [label="stack"];
  95 -> 96;
  97 [label="."];
  95 -> 97;
  98 [label="pop"];
  95 -> 98;
  99 [label="("];
  95 -> 99;
  100 [label=")"];
  95 -> 100;
  94 -> 95;
  93 -> 94;
  101 [label=";"];
  93 -> 101;
  1 -> 93;
  102 [label="statement"];
  103 [label="single_statement"];
  104 [label="assign_statement"];
  105 [label="x"];
  104 -> 105;
  106 [label="increment"];
  107 [label="++"];
  106 -> 107;
  104 -> 106;
  103 -> 104;
  102 -> 103;
  108 [label=";"];
  102 -> 108;
  1 -> 102;
  109 [label="statement"];
  110 [label="single_statement"];
  111 [label="assign_statement"];
  112 [label="increment"];
  113 [label="++"];
  112 -> 113;
  111 -> 112;
  114 [label="y"];
  111 -> 114;
  110 -> 111;
  109 -> 110;
  115 [label=";"];
  109 -> 115;
  1 -> 109;
  116 [label="statement"];
  117 [label="single_statement"];
  118 [label="assign_statement"];
  119 [label="decrement"];
  120 [label="--"];
  119 -> 120;
  118 -> 119;
  121 [label="z"];
  118 -> 121;
  117 -> 118;
  116 -> 117;
  122 [label=";"];
  116 -> 122;
  1 -> 116;
  123 [label="<EOF>"];
  1 -> 123;
}
