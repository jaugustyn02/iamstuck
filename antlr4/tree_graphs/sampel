digraph ParseTree {
node [shape=plaintext];
  1 [label="start_"];
  2 [label="statement"];
  3 [label="block_statement"];
  4 [label="block_declaration"];
  5 [label="function_definition"];
  6 [label="DEF"];
  5 -> 6;
  7 [label="data_type"];
  8 [label="void"];
  9 [label="void"];
  8 -> 9;
  7 -> 8;
  5 -> 7;
  10 [label="main"];
  5 -> 10;
  11 [label="("];
  5 -> 11;
  12 [label="data_type"];
  13 [label="integer"];
  14 [label="int"];
  13 -> 14;
  12 -> 13;
  5 -> 12;
  15 [label="x"];
  5 -> 15;
  16 [label=","];
  5 -> 16;
  17 [label="data_type"];
  18 [label="string"];
  19 [label="string"];
  18 -> 19;
  17 -> 18;
  5 -> 17;
  20 [label="args"];
  5 -> 20;
  21 [label=")"];
  5 -> 21;
  22 [label=":"];
  5 -> 22;
  23 [label="statement"];
  24 [label="single_statement"];
  25 [label="single_declaration"];
  26 [label="variable_declaration"];
  27 [label="data_type"];
  28 [label="string"];
  29 [label="string"];
  28 -> 29;
  27 -> 28;
  26 -> 27;
  30 [label="s"];
  26 -> 30;
  31 [label="assign"];
  32 [label="="];
  31 -> 32;
  26 -> 31;
  33 [label="expression"];
  34 [label="constant"];
  35 [label="string_literal"];
  36 [label="\""];
  35 -> 36;
  37 [label="siema"];
  35 -> 37;
  38 [label="\""];
  35 -> 38;
  34 -> 35;
  33 -> 34;
  26 -> 33;
  25 -> 26;
  24 -> 25;
  23 -> 24;
  39 [label=";"];
  23 -> 39;
  5 -> 23;
  40 [label="return_statement"];
  41 [label="RETURN"];
  40 -> 41;
  42 [label=";"];
  40 -> 42;
  5 -> 40;
  4 -> 5;
  3 -> 4;
  2 -> 3;
  43 [label="END"];
  2 -> 43;
  1 -> 2;
  44 [label="statement"];
  45 [label="single_statement"];
  46 [label="single_declaration"];
  47 [label="variable_declaration"];
  48 [label="data_type"];
  49 [label="integer"];
  50 [label="int"];
  49 -> 50;
  48 -> 49;
  47 -> 48;
  51 [label="x"];
  47 -> 51;
  52 [label="assign"];
  53 [label="="];
  52 -> 53;
  47 -> 52;
  54 [label="expression"];
  55 [label="constant"];
  56 [label="-1"];
  55 -> 56;
  54 -> 55;
  47 -> 54;
  57 [label=","];
  47 -> 57;
  58 [label="y"];
  47 -> 58;
  59 [label=","];
  47 -> 59;
  60 [label="z"];
  47 -> 60;
  46 -> 47;
  45 -> 46;
  44 -> 45;
  61 [label=";"];
  44 -> 61;
  1 -> 44;
  62 [label="statement"];
  63 [label="single_statement"];
  64 [label="single_declaration"];
  65 [label="container_declaration"];
  66 [label="container_type"];
  67 [label="stack"];
  68 [label="STACK"];
  67 -> 68;
  66 -> 67;
  65 -> 66;
  69 [label="<"];
  65 -> 69;
  70 [label="data_type"];
  71 [label="integer"];
  72 [label="int"];
  71 -> 72;
  70 -> 71;
  65 -> 70;
  73 [label=">"];
  65 -> 73;
  74 [label="stack"];
  65 -> 74;
  64 -> 65;
  63 -> 64;
  62 -> 63;
  75 [label=";"];
  62 -> 75;
  1 -> 62;
  76 [label="statement"];
  77 [label="single_statement"];
  78 [label="method_call"];
  79 [label="stack"];
  78 -> 79;
  80 [label="."];
  78 -> 80;
  81 [label="push"];
  78 -> 81;
  82 [label="("];
  78 -> 82;
  83 [label="expression"];
  84 [label="x"];
  83 -> 84;
  78 -> 83;
  85 [label=")"];
  78 -> 85;
  77 -> 78;
  76 -> 77;
  86 [label=";"];
  76 -> 86;
  1 -> 76;
  87 [label="statement"];
  88 [label="single_statement"];
  89 [label="method_call"];
  90 [label="stack"];
  89 -> 90;
  91 [label="."];
  89 -> 91;
  92 [label="push"];
  89 -> 92;
  93 [label="("];
  89 -> 93;
  94 [label="expression"];
  95 [label="constant"];
  96 [label="2"];
  95 -> 96;
  94 -> 95;
  89 -> 94;
  97 [label=")"];
  89 -> 97;
  88 -> 89;
  87 -> 88;
  98 [label=";"];
  87 -> 98;
  1 -> 87;
  99 [label="statement"];
  100 [label="single_statement"];
  101 [label="method_call"];
  102 [label="stack"];
  101 -> 102;
  103 [label="."];
  101 -> 103;
  104 [label="pop"];
  101 -> 104;
  105 [label="("];
  101 -> 105;
  106 [label=")"];
  101 -> 106;
  100 -> 101;
  99 -> 100;
  107 [label=";"];
  99 -> 107;
  1 -> 99;
  108 [label="statement"];
  109 [label="single_statement"];
  110 [label="printing_statement"];
  111 [label="print_statement"];
  112 [label="PRINT"];
  111 -> 112;
  113 [label="("];
  111 -> 113;
  114 [label="expression"];
  115 [label="stack"];
  114 -> 115;
  116 [label="["];
  114 -> 116;
  117 [label="expression"];
  118 [label="constant"];
  119 [label="0"];
  118 -> 119;
  117 -> 118;
  114 -> 117;
  120 [label="]"];
  114 -> 120;
  111 -> 114;
  121 [label=")"];
  111 -> 121;
  110 -> 111;
  109 -> 110;
  108 -> 109;
  122 [label=";"];
  108 -> 122;
  1 -> 108;
  123 [label="statement"];
  124 [label="single_statement"];
  125 [label="assign_statement"];
  126 [label="x"];
  125 -> 126;
  127 [label="increment"];
  128 [label="++"];
  127 -> 128;
  125 -> 127;
  124 -> 125;
  123 -> 124;
  129 [label=";"];
  123 -> 129;
  1 -> 123;
  130 [label="statement"];
  131 [label="single_statement"];
  132 [label="assign_statement"];
  133 [label="increment"];
  134 [label="++"];
  133 -> 134;
  132 -> 133;
  135 [label="y"];
  132 -> 135;
  131 -> 132;
  130 -> 131;
  136 [label=";"];
  130 -> 136;
  1 -> 130;
  137 [label="statement"];
  138 [label="single_statement"];
  139 [label="assign_statement"];
  140 [label="decrement"];
  141 [label="--"];
  140 -> 141;
  139 -> 140;
  142 [label="z"];
  139 -> 142;
  138 -> 139;
  137 -> 138;
  143 [label=";"];
  137 -> 143;
  1 -> 137;
  144 [label="<EOF>"];
  1 -> 144;
}
