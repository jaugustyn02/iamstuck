digraph ParseTree {
node [shape=plaintext];
  1 [label="start_"];
  2 [label="statement"];
  3 [label="block_statement"];
  4 [label="if_statement"];
  5 [label="IF"];
  4 -> 5;
  6 [label="condition"];
  7 [label="bool_literal"];
  8 [label="true"];
  7 -> 8;
  6 -> 7;
  4 -> 6;
  9 [label=":"];
  4 -> 9;
  10 [label="statement"];
  11 [label="single_statement"];
  12 [label="pass_statement"];
  13 [label="PASS"];
  12 -> 13;
  11 -> 12;
  10 -> 11;
  14 [label=";"];
  10 -> 14;
  4 -> 10;
  3 -> 4;
  2 -> 3;
  15 [label="END"];
  2 -> 15;
  1 -> 2;
  16 [label="statement"];
  17 [label="single_statement"];
  18 [label="single_declaration"];
  19 [label="container_declaration"];
  20 [label="container_type"];
  21 [label="stack"];
  22 [label="STACK"];
  21 -> 22;
  20 -> 21;
  19 -> 20;
  23 [label="<"];
  19 -> 23;
  24 [label="data_type"];
  25 [label="integer"];
  26 [label="int"];
  25 -> 26;
  24 -> 25;
  19 -> 24;
  27 [label=">"];
  19 -> 27;
  28 [label="s1"];
  19 -> 28;
  18 -> 19;
  17 -> 18;
  16 -> 17;
  29 [label=";"];
  16 -> 29;
  1 -> 16;
  30 [label="statement"];
  31 [label="single_statement"];
  32 [label="single_declaration"];
  33 [label="container_declaration"];
  34 [label="container_type"];
  35 [label="queue"];
  36 [label="QUEUE"];
  35 -> 36;
  34 -> 35;
  33 -> 34;
  37 [label="<"];
  33 -> 37;
  38 [label="data_type"];
  39 [label="float"];
  40 [label="float"];
  39 -> 40;
  38 -> 39;
  33 -> 38;
  41 [label=">"];
  33 -> 41;
  42 [label="q1"];
  33 -> 42;
  32 -> 33;
  31 -> 32;
  30 -> 31;
  43 [label=";"];
  30 -> 43;
  1 -> 30;
  44 [label="statement"];
  45 [label="single_statement"];
  46 [label="single_declaration"];
  47 [label="container_declaration"];
  48 [label="container_type"];
  49 [label="deque"];
  50 [label="DEQUE"];
  49 -> 50;
  48 -> 49;
  47 -> 48;
  51 [label="<"];
  47 -> 51;
  52 [label="data_type"];
  53 [label="string"];
  54 [label="string"];
  53 -> 54;
  52 -> 53;
  47 -> 52;
  55 [label=">"];
  47 -> 55;
  56 [label="dq1"];
  47 -> 56;
  46 -> 47;
  45 -> 46;
  44 -> 45;
  57 [label=";"];
  44 -> 57;
  1 -> 44;
  58 [label="statement"];
  59 [label="single_statement"];
  60 [label="single_declaration"];
  61 [label="variable_declaration"];
  62 [label="data_type"];
  63 [label="integer"];
  64 [label="int"];
  63 -> 64;
  62 -> 63;
  61 -> 62;
  65 [label="x"];
  61 -> 65;
  66 [label="assign"];
  67 [label="="];
  66 -> 67;
  61 -> 66;
  68 [label="expression"];
  69 [label="constant"];
  70 [label="10"];
  69 -> 70;
  68 -> 69;
  61 -> 68;
  60 -> 61;
  59 -> 60;
  58 -> 59;
  71 [label=";"];
  58 -> 71;
  1 -> 58;
  72 [label="statement"];
  73 [label="block_statement"];
  74 [label="if_statement"];
  75 [label="IF"];
  74 -> 75;
  76 [label="condition"];
  77 [label="expression"];
  78 [label="x"];
  77 -> 78;
  76 -> 77;
  79 [label="comparator"];
  80 [label="greater_equal"];
  81 [label=">="];
  80 -> 81;
  79 -> 80;
  76 -> 79;
  82 [label="expression"];
  83 [label="constant"];
  84 [label="10"];
  83 -> 84;
  82 -> 83;
  76 -> 82;
  74 -> 76;
  85 [label=":"];
  74 -> 85;
  86 [label="statement"];
  87 [label="single_statement"];
  88 [label="pass_statement"];
  89 [label="PASS"];
  88 -> 89;
  87 -> 88;
  86 -> 87;
  90 [label=";"];
  86 -> 90;
  74 -> 86;
  91 [label="ELIF"];
  74 -> 91;
  92 [label="condition"];
  93 [label="expression"];
  94 [label="x"];
  93 -> 94;
  92 -> 93;
  95 [label="comparator"];
  96 [label="equal"];
  97 [label="=="];
  96 -> 97;
  95 -> 96;
  92 -> 95;
  98 [label="expression"];
  99 [label="constant"];
  100 [label="11"];
  99 -> 100;
  98 -> 99;
  92 -> 98;
  74 -> 92;
  101 [label=":"];
  74 -> 101;
  102 [label="statement"];
  103 [label="single_statement"];
  104 [label="assign_statement"];
  105 [label="x"];
  104 -> 105;
  106 [label="assign_operator"];
  107 [label="assign"];
  108 [label="="];
  107 -> 108;
  106 -> 107;
  104 -> 106;
  109 [label="expression"];
  110 [label="constant"];
  111 [label="1"];
  110 -> 111;
  109 -> 110;
  104 -> 109;
  103 -> 104;
  102 -> 103;
  112 [label=";"];
  102 -> 112;
  74 -> 102;
  113 [label="ELSE"];
  74 -> 113;
  114 [label=":"];
  74 -> 114;
  115 [label="statement"];
  116 [label="single_statement"];
  117 [label="assign_statement"];
  118 [label="x"];
  117 -> 118;
  119 [label="assign_operator"];
  120 [label="add_assign"];
  121 [label="+="];
  120 -> 121;
  119 -> 120;
  117 -> 119;
  122 [label="expression"];
  123 [label="constant"];
  124 [label="2"];
  123 -> 124;
  122 -> 123;
  117 -> 122;
  116 -> 117;
  115 -> 116;
  125 [label=";"];
  115 -> 125;
  74 -> 115;
  73 -> 74;
  72 -> 73;
  126 [label="END"];
  72 -> 126;
  1 -> 72;
  127 [label="statement"];
  128 [label="single_statement"];
  129 [label="single_declaration"];
  130 [label="variable_declaration"];
  131 [label="data_type"];
  132 [label="float"];
  133 [label="float"];
  132 -> 133;
  131 -> 132;
  130 -> 131;
  134 [label="y"];
  130 -> 134;
  135 [label="assign"];
  136 [label="="];
  135 -> 136;
  130 -> 135;
  137 [label="expression"];
  138 [label="constant"];
  139 [label="20.0"];
  138 -> 139;
  137 -> 138;
  130 -> 137;
  129 -> 130;
  128 -> 129;
  127 -> 128;
  140 [label=";"];
  127 -> 140;
  1 -> 127;
  141 [label="statement"];
  142 [label="block_statement"];
  143 [label="loop_statement"];
  144 [label="while_statement"];
  145 [label="WHILE"];
  144 -> 145;
  146 [label="condition"];
  147 [label="expression"];
  148 [label="y"];
  147 -> 148;
  146 -> 147;
  149 [label="comparator"];
  150 [label="greater_equal"];
  151 [label=">="];
  150 -> 151;
  149 -> 150;
  146 -> 149;
  152 [label="expression"];
  153 [label="constant"];
  154 [label="5.0"];
  153 -> 154;
  152 -> 153;
  146 -> 152;
  144 -> 146;
  155 [label=":"];
  144 -> 155;
  156 [label="statement"];
  157 [label="single_statement"];
  158 [label="assign_statement"];
  159 [label="y"];
  158 -> 159;
  160 [label="assign_operator"];
  161 [label="div_assign"];
  162 [label="/="];
  161 -> 162;
  160 -> 161;
  158 -> 160;
  163 [label="expression"];
  164 [label="constant"];
  165 [label="2"];
  164 -> 165;
  163 -> 164;
  158 -> 163;
  157 -> 158;
  156 -> 157;
  166 [label=";"];
  156 -> 166;
  144 -> 156;
  143 -> 144;
  142 -> 143;
  141 -> 142;
  167 [label="END"];
  141 -> 167;
  1 -> 141;
  168 [label="<EOF>"];
  1 -> 168;
}
