digraph ParseTree {
node [shape=plaintext];
  1 [label="program"];
  2 [label="statement"];
  3 [label="block_statement"];
  4 [label="loop_statement"];
  5 [label="for_statement"];
  6 [label="for_range_statement"];
  7 [label="FOR"];
  6 -> 7;
  8 [label="i"];
  6 -> 8;
  9 [label="\"IN RANGE(\""];
  6 -> 9;
  10 [label="expression"];
  11 [label="single_expression"];
  12 [label="constant"];
  13 [label="1"];
  12 -> 13;
  11 -> 12;
  10 -> 11;
  6 -> 10;
  14 [label=","];
  6 -> 14;
  15 [label="expression"];
  16 [label="single_expression"];
  17 [label="constant"];
  18 [label="10"];
  17 -> 18;
  16 -> 17;
  15 -> 16;
  6 -> 15;
  19 [label=")"];
  6 -> 19;
  20 [label=":"];
  6 -> 20;
  21 [label="statement"];
  22 [label="single_statement"];
  23 [label="pass_statement"];
  24 [label="PASS"];
  23 -> 24;
  22 -> 23;
  21 -> 22;
  25 [label=";"];
  21 -> 25;
  6 -> 21;
  5 -> 6;
  4 -> 5;
  3 -> 4;
  2 -> 3;
  26 [label="END"];
  2 -> 26;
  1 -> 2;
  27 [label="statement"];
  28 [label="block_statement"];
  29 [label="loop_statement"];
  30 [label="for_statement"];
  31 [label="for_range_statement"];
  32 [label="FOR"];
  31 -> 32;
  33 [label="i"];
  31 -> 33;
  34 [label="\"IN RANGE(\""];
  31 -> 34;
  35 [label="expression"];
  36 [label="single_expression"];
  37 [label="constant"];
  38 [label="5"];
  37 -> 38;
  36 -> 37;
  35 -> 36;
  31 -> 35;
  39 [label=")"];
  31 -> 39;
  40 [label=":"];
  31 -> 40;
  41 [label="statement"];
  42 [label="single_statement"];
  43 [label="printing_statement"];
  44 [label="print_statement"];
  45 [label="PRINT"];
  44 -> 45;
  46 [label="("];
  44 -> 46;
  47 [label="expression"];
  48 [label="single_expression"];
  49 [label="i"];
  48 -> 49;
  47 -> 48;
  44 -> 47;
  50 [label=")"];
  44 -> 50;
  43 -> 44;
  42 -> 43;
  41 -> 42;
  51 [label=";"];
  41 -> 51;
  31 -> 41;
  30 -> 31;
  29 -> 30;
  28 -> 29;
  27 -> 28;
  52 [label="END"];
  27 -> 52;
  1 -> 27;
  53 [label="statement"];
  54 [label="block_statement"];
  55 [label="loop_statement"];
  56 [label="for_statement"];
  57 [label="for_range_statement"];
  58 [label="FOR"];
  57 -> 58;
  59 [label="j"];
  57 -> 59;
  60 [label="\"IN RANGE(\""];
  57 -> 60;
  61 [label="expression"];
  62 [label="single_expression"];
  63 [label="constant"];
  64 [label="100"];
  63 -> 64;
  62 -> 63;
  61 -> 62;
  57 -> 61;
  65 [label=","];
  57 -> 65;
  66 [label="expression"];
  67 [label="single_expression"];
  68 [label="constant"];
  69 [label="-1"];
  68 -> 69;
  67 -> 68;
  66 -> 67;
  57 -> 66;
  70 [label=","];
  57 -> 70;
  71 [label="expression"];
  72 [label="single_expression"];
  73 [label="constant"];
  74 [label="-1"];
  73 -> 74;
  72 -> 73;
  71 -> 72;
  57 -> 71;
  75 [label=")"];
  57 -> 75;
  76 [label=":"];
  57 -> 76;
  77 [label="statement"];
  78 [label="single_statement"];
  79 [label="printing_statement"];
  80 [label="print_statement"];
  81 [label="PRINT"];
  80 -> 81;
  82 [label="("];
  80 -> 82;
  83 [label="expression"];
  84 [label="arithmetic_expression"];
  85 [label="arithmetic_expression"];
  86 [label="single_expression"];
  87 [label="i"];
  86 -> 87;
  85 -> 86;
  84 -> 85;
  88 [label="arith_operator"];
  89 [label="mul"];
  90 [label="*"];
  89 -> 90;
  88 -> 89;
  84 -> 88;
  91 [label="arithmetic_expression"];
  92 [label="single_expression"];
  93 [label="constant"];
  94 [label="2"];
  93 -> 94;
  92 -> 93;
  91 -> 92;
  84 -> 91;
  83 -> 84;
  80 -> 83;
  95 [label=")"];
  80 -> 95;
  79 -> 80;
  78 -> 79;
  77 -> 78;
  96 [label=";"];
  77 -> 96;
  57 -> 77;
  56 -> 57;
  55 -> 56;
  54 -> 55;
  53 -> 54;
  97 [label="END"];
  53 -> 97;
  1 -> 53;
  98 [label="statement"];
  99 [label="single_statement"];
  100 [label="single_declaration"];
  101 [label="container_declaration"];
  102 [label="container_type"];
  103 [label="stack"];
  104 [label="STACK"];
  103 -> 104;
  102 -> 103;
  101 -> 102;
  105 [label="<"];
  101 -> 105;
  106 [label="data_type"];
  107 [label="integer"];
  108 [label="int"];
  107 -> 108;
  106 -> 107;
  101 -> 106;
  109 [label=">"];
  101 -> 109;
  110 [label="stack"];
  101 -> 110;
  100 -> 101;
  99 -> 100;
  98 -> 99;
  111 [label=";"];
  98 -> 111;
  1 -> 98;
  112 [label="statement"];
  113 [label="block_statement"];
  114 [label="loop_statement"];
  115 [label="for_statement"];
  116 [label="for_each_statement"];
  117 [label="FOR"];
  116 -> 117;
  118 [label="s"];
  116 -> 118;
  119 [label="IN"];
  116 -> 119;
  120 [label="stack"];
  116 -> 120;
  121 [label=":"];
  116 -> 121;
  122 [label="statement"];
  123 [label="single_statement"];
  124 [label="assign_statement"];
  125 [label="s"];
  124 -> 125;
  126 [label="assign_operator"];
  127 [label="add_assign"];
  128 [label="+="];
  127 -> 128;
  126 -> 127;
  124 -> 126;
  129 [label="expression"];
  130 [label="single_expression"];
  131 [label="constant"];
  132 [label="1"];
  131 -> 132;
  130 -> 131;
  129 -> 130;
  124 -> 129;
  123 -> 124;
  122 -> 123;
  133 [label=";"];
  122 -> 133;
  116 -> 122;
  115 -> 116;
  114 -> 115;
  113 -> 114;
  112 -> 113;
  134 [label="END"];
  112 -> 134;
  1 -> 112;
  135 [label="statement"];
  136 [label="single_statement"];
  137 [label="single_declaration"];
  138 [label="variable_declaration"];
  139 [label="data_type"];
  140 [label="integer"];
  141 [label="int"];
  140 -> 141;
  139 -> 140;
  138 -> 139;
  142 [label="i"];
  138 -> 142;
  143 [label="assign"];
  144 [label="="];
  143 -> 144;
  138 -> 143;
  145 [label="expression"];
  146 [label="single_expression"];
  147 [label="constant"];
  148 [label="10"];
  147 -> 148;
  146 -> 147;
  145 -> 146;
  138 -> 145;
  137 -> 138;
  136 -> 137;
  135 -> 136;
  149 [label=";"];
  135 -> 149;
  1 -> 135;
  150 [label="statement"];
  151 [label="block_statement"];
  152 [label="loop_statement"];
  153 [label="while_statement"];
  154 [label="WHILE"];
  153 -> 154;
  155 [label="logical_expression"];
  156 [label="logical_expression"];
  157 [label="single_expression"];
  158 [label="i"];
  157 -> 158;
  156 -> 157;
  155 -> 156;
  159 [label="comparator"];
  160 [label="greater"];
  161 [label=">"];
  160 -> 161;
  159 -> 160;
  155 -> 159;
  162 [label="logical_expression"];
  163 [label="single_expression"];
  164 [label="constant"];
  165 [label="0"];
  164 -> 165;
  163 -> 164;
  162 -> 163;
  155 -> 162;
  153 -> 155;
  166 [label=":"];
  153 -> 166;
  167 [label="statement"];
  168 [label="single_statement"];
  169 [label="assign_statement"];
  170 [label="i"];
  169 -> 170;
  171 [label="assign_operator"];
  172 [label="sub_assign"];
  173 [label="-="];
  172 -> 173;
  171 -> 172;
  169 -> 171;
  174 [label="expression"];
  175 [label="single_expression"];
  176 [label="constant"];
  177 [label="1"];
  176 -> 177;
  175 -> 176;
  174 -> 175;
  169 -> 174;
  168 -> 169;
  167 -> 168;
  178 [label=";"];
  167 -> 178;
  153 -> 167;
  152 -> 153;
  151 -> 152;
  150 -> 151;
  179 [label="END"];
  150 -> 179;
  1 -> 150;
  180 [label="<EOF>"];
  1 -> 180;
}
