digraph ParseTree {
node [shape=plaintext];
  1 [label="program"];
  2 [label="statement"];
  3 [label="block_statement"];
  4 [label="block_declaration"];
  5 [label="function_definition"];
  6 [label="DEF"];
  5 -> 6;
  7 [label="data_type"];
  8 [label="void"];
  9 [label="void"];
  8 -> 9;
  7 -> 8;
  5 -> 7;
  10 [label="id"];
  11 [label="print_stacks"];
  10 -> 11;
  5 -> 10;
  12 [label="("];
  5 -> 12;
  13 [label=")"];
  5 -> 13;
  14 [label=":"];
  5 -> 14;
  15 [label="statement"];
  16 [label="single_statement"];
  17 [label="printing_statement"];
  18 [label="printf_statement"];
  19 [label="PRINTF"];
  18 -> 19;
  20 [label="("];
  18 -> 20;
  21 [label="\"A: \""];
  18 -> 21;
  22 [label=")"];
  18 -> 22;
  17 -> 18;
  16 -> 17;
  15 -> 16;
  23 [label=";"];
  15 -> 23;
  5 -> 15;
  24 [label="statement"];
  25 [label="single_statement"];
  26 [label="method_call"];
  27 [label="id"];
  28 [label="A"];
  27 -> 28;
  26 -> 27;
  29 [label="."];
  26 -> 29;
  30 [label="id"];
  31 [label="print"];
  30 -> 31;
  26 -> 30;
  32 [label="("];
  26 -> 32;
  33 [label=")"];
  26 -> 33;
  25 -> 26;
  24 -> 25;
  34 [label=";"];
  24 -> 34;
  5 -> 24;
  35 [label="statement"];
  36 [label="single_statement"];
  37 [label="printing_statement"];
  38 [label="printf_statement"];
  39 [label="PRINTF"];
  38 -> 39;
  40 [label="("];
  38 -> 40;
  41 [label="\"B: \""];
  38 -> 41;
  42 [label=")"];
  38 -> 42;
  37 -> 38;
  36 -> 37;
  35 -> 36;
  43 [label=";"];
  35 -> 43;
  5 -> 35;
  44 [label="statement"];
  45 [label="single_statement"];
  46 [label="method_call"];
  47 [label="id"];
  48 [label="B"];
  47 -> 48;
  46 -> 47;
  49 [label="."];
  46 -> 49;
  50 [label="id"];
  51 [label="print"];
  50 -> 51;
  46 -> 50;
  52 [label="("];
  46 -> 52;
  53 [label=")"];
  46 -> 53;
  45 -> 46;
  44 -> 45;
  54 [label=";"];
  44 -> 54;
  5 -> 44;
  55 [label="statement"];
  56 [label="single_statement"];
  57 [label="printing_statement"];
  58 [label="printf_statement"];
  59 [label="PRINTF"];
  58 -> 59;
  60 [label="("];
  58 -> 60;
  61 [label="\"C: \""];
  58 -> 61;
  62 [label=")"];
  58 -> 62;
  57 -> 58;
  56 -> 57;
  55 -> 56;
  63 [label=";"];
  55 -> 63;
  5 -> 55;
  64 [label="statement"];
  65 [label="single_statement"];
  66 [label="method_call"];
  67 [label="id"];
  68 [label="C"];
  67 -> 68;
  66 -> 67;
  69 [label="."];
  66 -> 69;
  70 [label="id"];
  71 [label="print"];
  70 -> 71;
  66 -> 70;
  72 [label="("];
  66 -> 72;
  73 [label=")"];
  66 -> 73;
  65 -> 66;
  64 -> 65;
  74 [label=";"];
  64 -> 74;
  5 -> 64;
  4 -> 5;
  3 -> 4;
  2 -> 3;
  75 [label="END"];
  2 -> 75;
  1 -> 2;
  76 [label="statement"];
  77 [label="block_statement"];
  78 [label="block_declaration"];
  79 [label="function_definition"];
  80 [label="DEF"];
  79 -> 80;
  81 [label="data_type"];
  82 [label="integer"];
  83 [label="int"];
  82 -> 83;
  81 -> 82;
  79 -> 81;
  84 [label="id"];
  85 [label="pop"];
  84 -> 85;
  79 -> 84;
  86 [label="("];
  79 -> 86;
  87 [label="data_type"];
  88 [label="char"];
  89 [label="char"];
  88 -> 89;
  87 -> 88;
  79 -> 87;
  90 [label="id"];
  91 [label="s"];
  90 -> 91;
  79 -> 90;
  92 [label=")"];
  79 -> 92;
  93 [label=":"];
  79 -> 93;
  94 [label="statement"];
  95 [label="block_statement"];
  96 [label="if_statement"];
  97 [label="IF"];
  96 -> 97;
  98 [label="logical_expression"];
  99 [label="logical_expression"];
  100 [label="single_expression"];
  101 [label="id"];
  102 [label="s"];
  101 -> 102;
  100 -> 101;
  99 -> 100;
  98 -> 99;
  103 [label="comparator"];
  104 [label="equal"];
  105 [label="=="];
  104 -> 105;
  103 -> 104;
  98 -> 103;
  106 [label="logical_expression"];
  107 [label="single_expression"];
  108 [label="constant"];
  109 [label="char_literal"];
  110 [label="'"];
  109 -> 110;
  111 [label="A"];
  109 -> 111;
  112 [label="'"];
  109 -> 112;
  108 -> 109;
  107 -> 108;
  106 -> 107;
  98 -> 106;
  96 -> 98;
  113 [label=":"];
  96 -> 113;
  114 [label="statement"];
  115 [label="single_statement"];
  116 [label="return_statement"];
  117 [label="RETURN"];
  116 -> 117;
  118 [label="expression"];
  119 [label="single_expression"];
  120 [label="method_call"];
  121 [label="id"];
  122 [label="A"];
  121 -> 122;
  120 -> 121;
  123 [label="."];
  120 -> 123;
  124 [label="id"];
  125 [label="pop"];
  124 -> 125;
  120 -> 124;
  126 [label="("];
  120 -> 126;
  127 [label=")"];
  120 -> 127;
  119 -> 120;
  118 -> 119;
  116 -> 118;
  115 -> 116;
  114 -> 115;
  128 [label=";"];
  114 -> 128;
  96 -> 114;
  129 [label="ELIF"];
  96 -> 129;
  130 [label="logical_expression"];
  131 [label="logical_expression"];
  132 [label="single_expression"];
  133 [label="id"];
  134 [label="s"];
  133 -> 134;
  132 -> 133;
  131 -> 132;
  130 -> 131;
  135 [label="comparator"];
  136 [label="equal"];
  137 [label="=="];
  136 -> 137;
  135 -> 136;
  130 -> 135;
  138 [label="logical_expression"];
  139 [label="single_expression"];
  140 [label="constant"];
  141 [label="char_literal"];
  142 [label="'"];
  141 -> 142;
  143 [label="B"];
  141 -> 143;
  144 [label="'"];
  141 -> 144;
  140 -> 141;
  139 -> 140;
  138 -> 139;
  130 -> 138;
  96 -> 130;
  145 [label=":"];
  96 -> 145;
  146 [label="statement"];
  147 [label="single_statement"];
  148 [label="return_statement"];
  149 [label="RETURN"];
  148 -> 149;
  150 [label="expression"];
  151 [label="single_expression"];
  152 [label="method_call"];
  153 [label="id"];
  154 [label="B"];
  153 -> 154;
  152 -> 153;
  155 [label="."];
  152 -> 155;
  156 [label="id"];
  157 [label="pop"];
  156 -> 157;
  152 -> 156;
  158 [label="("];
  152 -> 158;
  159 [label=")"];
  152 -> 159;
  151 -> 152;
  150 -> 151;
  148 -> 150;
  147 -> 148;
  146 -> 147;
  160 [label=";"];
  146 -> 160;
  96 -> 146;
  161 [label="ELSE"];
  96 -> 161;
  162 [label=":"];
  96 -> 162;
  163 [label="statement"];
  164 [label="single_statement"];
  165 [label="return_statement"];
  166 [label="RETURN"];
  165 -> 166;
  167 [label="expression"];
  168 [label="single_expression"];
  169 [label="method_call"];
  170 [label="id"];
  171 [label="C"];
  170 -> 171;
  169 -> 170;
  172 [label="."];
  169 -> 172;
  173 [label="id"];
  174 [label="pop"];
  173 -> 174;
  169 -> 173;
  175 [label="("];
  169 -> 175;
  176 [label=")"];
  169 -> 176;
  168 -> 169;
  167 -> 168;
  165 -> 167;
  164 -> 165;
  163 -> 164;
  177 [label=";"];
  163 -> 177;
  96 -> 163;
  95 -> 96;
  94 -> 95;
  178 [label="END"];
  94 -> 178;
  79 -> 94;
  78 -> 79;
  77 -> 78;
  76 -> 77;
  179 [label="END"];
  76 -> 179;
  1 -> 76;
  180 [label="statement"];
  181 [label="block_statement"];
  182 [label="block_declaration"];
  183 [label="function_definition"];
  184 [label="DEF"];
  183 -> 184;
  185 [label="data_type"];
  186 [label="void"];
  187 [label="void"];
  186 -> 187;
  185 -> 186;
  183 -> 185;
  188 [label="id"];
  189 [label="push"];
  188 -> 189;
  183 -> 188;
  190 [label="("];
  183 -> 190;
  191 [label="data_type"];
  192 [label="char"];
  193 [label="char"];
  192 -> 193;
  191 -> 192;
  183 -> 191;
  194 [label="id"];
  195 [label="s"];
  194 -> 195;
  183 -> 194;
  196 [label=","];
  183 -> 196;
  197 [label="data_type"];
  198 [label="integer"];
  199 [label="int"];
  198 -> 199;
  197 -> 198;
  183 -> 197;
  200 [label="id"];
  201 [label="x"];
  200 -> 201;
  183 -> 200;
  202 [label=")"];
  183 -> 202;
  203 [label=":"];
  183 -> 203;
  204 [label="statement"];
  205 [label="block_statement"];
  206 [label="if_statement"];
  207 [label="IF"];
  206 -> 207;
  208 [label="logical_expression"];
  209 [label="logical_expression"];
  210 [label="single_expression"];
  211 [label="id"];
  212 [label="s"];
  211 -> 212;
  210 -> 211;
  209 -> 210;
  208 -> 209;
  213 [label="comparator"];
  214 [label="equal"];
  215 [label="=="];
  214 -> 215;
  213 -> 214;
  208 -> 213;
  216 [label="logical_expression"];
  217 [label="single_expression"];
  218 [label="constant"];
  219 [label="char_literal"];
  220 [label="'"];
  219 -> 220;
  221 [label="A"];
  219 -> 221;
  222 [label="'"];
  219 -> 222;
  218 -> 219;
  217 -> 218;
  216 -> 217;
  208 -> 216;
  206 -> 208;
  223 [label=":"];
  206 -> 223;
  224 [label="statement"];
  225 [label="single_statement"];
  226 [label="method_call"];
  227 [label="id"];
  228 [label="A"];
  227 -> 228;
  226 -> 227;
  229 [label="."];
  226 -> 229;
  230 [label="id"];
  231 [label="push"];
  230 -> 231;
  226 -> 230;
  232 [label="("];
  226 -> 232;
  233 [label="arguments"];
  234 [label="expression"];
  235 [label="single_expression"];
  236 [label="id"];
  237 [label="x"];
  236 -> 237;
  235 -> 236;
  234 -> 235;
  233 -> 234;
  226 -> 233;
  238 [label=")"];
  226 -> 238;
  225 -> 226;
  224 -> 225;
  239 [label=";"];
  224 -> 239;
  206 -> 224;
  240 [label="ELIF"];
  206 -> 240;
  241 [label="logical_expression"];
  242 [label="logical_expression"];
  243 [label="single_expression"];
  244 [label="id"];
  245 [label="s"];
  244 -> 245;
  243 -> 244;
  242 -> 243;
  241 -> 242;
  246 [label="comparator"];
  247 [label="equal"];
  248 [label="=="];
  247 -> 248;
  246 -> 247;
  241 -> 246;
  249 [label="logical_expression"];
  250 [label="single_expression"];
  251 [label="constant"];
  252 [label="char_literal"];
  253 [label="'"];
  252 -> 253;
  254 [label="B"];
  252 -> 254;
  255 [label="'"];
  252 -> 255;
  251 -> 252;
  250 -> 251;
  249 -> 250;
  241 -> 249;
  206 -> 241;
  256 [label=":"];
  206 -> 256;
  257 [label="statement"];
  258 [label="single_statement"];
  259 [label="method_call"];
  260 [label="id"];
  261 [label="B"];
  260 -> 261;
  259 -> 260;
  262 [label="."];
  259 -> 262;
  263 [label="id"];
  264 [label="push"];
  263 -> 264;
  259 -> 263;
  265 [label="("];
  259 -> 265;
  266 [label="arguments"];
  267 [label="expression"];
  268 [label="single_expression"];
  269 [label="id"];
  270 [label="x"];
  269 -> 270;
  268 -> 269;
  267 -> 268;
  266 -> 267;
  259 -> 266;
  271 [label=")"];
  259 -> 271;
  258 -> 259;
  257 -> 258;
  272 [label=";"];
  257 -> 272;
  206 -> 257;
  273 [label="ELSE"];
  206 -> 273;
  274 [label=":"];
  206 -> 274;
  275 [label="statement"];
  276 [label="single_statement"];
  277 [label="method_call"];
  278 [label="id"];
  279 [label="C"];
  278 -> 279;
  277 -> 278;
  280 [label="."];
  277 -> 280;
  281 [label="id"];
  282 [label="push"];
  281 -> 282;
  277 -> 281;
  283 [label="("];
  277 -> 283;
  284 [label="arguments"];
  285 [label="expression"];
  286 [label="single_expression"];
  287 [label="id"];
  288 [label="x"];
  287 -> 288;
  286 -> 287;
  285 -> 286;
  284 -> 285;
  277 -> 284;
  289 [label=")"];
  277 -> 289;
  276 -> 277;
  275 -> 276;
  290 [label=";"];
  275 -> 290;
  206 -> 275;
  205 -> 206;
  204 -> 205;
  291 [label="END"];
  204 -> 291;
  183 -> 204;
  182 -> 183;
  181 -> 182;
  180 -> 181;
  292 [label="END"];
  180 -> 292;
  1 -> 180;
  293 [label="statement"];
  294 [label="block_statement"];
  295 [label="block_declaration"];
  296 [label="function_definition"];
  297 [label="DEF"];
  296 -> 297;
  298 [label="data_type"];
  299 [label="void"];
  300 [label="void"];
  299 -> 300;
  298 -> 299;
  296 -> 298;
  301 [label="id"];
  302 [label="towerOfHanoi"];
  301 -> 302;
  296 -> 301;
  303 [label="("];
  296 -> 303;
  304 [label="data_type"];
  305 [label="integer"];
  306 [label="int"];
  305 -> 306;
  304 -> 305;
  296 -> 304;
  307 [label="id"];
  308 [label="n"];
  307 -> 308;
  296 -> 307;
  309 [label=","];
  296 -> 309;
  310 [label="data_type"];
  311 [label="char"];
  312 [label="char"];
  311 -> 312;
  310 -> 311;
  296 -> 310;
  313 [label="id"];
  314 [label="a"];
  313 -> 314;
  296 -> 313;
  315 [label=","];
  296 -> 315;
  316 [label="data_type"];
  317 [label="char"];
  318 [label="char"];
  317 -> 318;
  316 -> 317;
  296 -> 316;
  319 [label="id"];
  320 [label="b"];
  319 -> 320;
  296 -> 319;
  321 [label=","];
  296 -> 321;
  322 [label="data_type"];
  323 [label="char"];
  324 [label="char"];
  323 -> 324;
  322 -> 323;
  296 -> 322;
  325 [label="id"];
  326 [label="c"];
  325 -> 326;
  296 -> 325;
  327 [label=")"];
  296 -> 327;
  328 [label=":"];
  296 -> 328;
  329 [label="statement"];
  330 [label="block_statement"];
  331 [label="if_statement"];
  332 [label="IF"];
  331 -> 332;
  333 [label="logical_expression"];
  334 [label="logical_expression"];
  335 [label="single_expression"];
  336 [label="id"];
  337 [label="n"];
  336 -> 337;
  335 -> 336;
  334 -> 335;
  333 -> 334;
  338 [label="comparator"];
  339 [label="equal"];
  340 [label="=="];
  339 -> 340;
  338 -> 339;
  333 -> 338;
  341 [label="logical_expression"];
  342 [label="single_expression"];
  343 [label="constant"];
  344 [label="1"];
  343 -> 344;
  342 -> 343;
  341 -> 342;
  333 -> 341;
  331 -> 333;
  345 [label=":"];
  331 -> 345;
  346 [label="statement"];
  347 [label="single_statement"];
  348 [label="printing_statement"];
  349 [label="printf_statement"];
  350 [label="PRINTF"];
  349 -> 350;
  351 [label="("];
  349 -> 351;
  352 [label="\"Move disk 1 from {} to {}\\n\""];
  349 -> 352;
  353 [label=","];
  349 -> 353;
  354 [label="arguments"];
  355 [label="expression"];
  356 [label="single_expression"];
  357 [label="id"];
  358 [label="a"];
  357 -> 358;
  356 -> 357;
  355 -> 356;
  354 -> 355;
  359 [label=","];
  354 -> 359;
  360 [label="expression"];
  361 [label="single_expression"];
  362 [label="id"];
  363 [label="c"];
  362 -> 363;
  361 -> 362;
  360 -> 361;
  354 -> 360;
  349 -> 354;
  364 [label=")"];
  349 -> 364;
  348 -> 349;
  347 -> 348;
  346 -> 347;
  365 [label=";"];
  346 -> 365;
  331 -> 346;
  366 [label="statement"];
  367 [label="single_statement"];
  368 [label="single_declaration"];
  369 [label="variable_declaration"];
  370 [label="data_type"];
  371 [label="integer"];
  372 [label="int"];
  371 -> 372;
  370 -> 371;
  369 -> 370;
  373 [label="id"];
  374 [label="x"];
  373 -> 374;
  369 -> 373;
  375 [label="assign"];
  376 [label="="];
  375 -> 376;
  369 -> 375;
  377 [label="expression"];
  378 [label="single_expression"];
  379 [label="function_call"];
  380 [label="id"];
  381 [label="pop"];
  380 -> 381;
  379 -> 380;
  382 [label="("];
  379 -> 382;
  383 [label="arguments"];
  384 [label="expression"];
  385 [label="single_expression"];
  386 [label="id"];
  387 [label="a"];
  386 -> 387;
  385 -> 386;
  384 -> 385;
  383 -> 384;
  379 -> 383;
  388 [label=")"];
  379 -> 388;
  378 -> 379;
  377 -> 378;
  369 -> 377;
  368 -> 369;
  367 -> 368;
  366 -> 367;
  389 [label=";"];
  366 -> 389;
  331 -> 366;
  390 [label="statement"];
  391 [label="single_statement"];
  392 [label="function_call"];
  393 [label="id"];
  394 [label="push"];
  393 -> 394;
  392 -> 393;
  395 [label="("];
  392 -> 395;
  396 [label="arguments"];
  397 [label="expression"];
  398 [label="single_expression"];
  399 [label="id"];
  400 [label="c"];
  399 -> 400;
  398 -> 399;
  397 -> 398;
  396 -> 397;
  401 [label=","];
  396 -> 401;
  402 [label="expression"];
  403 [label="single_expression"];
  404 [label="id"];
  405 [label="x"];
  404 -> 405;
  403 -> 404;
  402 -> 403;
  396 -> 402;
  392 -> 396;
  406 [label=")"];
  392 -> 406;
  391 -> 392;
  390 -> 391;
  407 [label=";"];
  390 -> 407;
  331 -> 390;
  408 [label="statement"];
  409 [label="single_statement"];
  410 [label="function_call"];
  411 [label="id"];
  412 [label="print_stacks"];
  411 -> 412;
  410 -> 411;
  413 [label="("];
  410 -> 413;
  414 [label=")"];
  410 -> 414;
  409 -> 410;
  408 -> 409;
  415 [label=";"];
  408 -> 415;
  331 -> 408;
  416 [label="statement"];
  417 [label="single_statement"];
  418 [label="return_statement"];
  419 [label="RETURN"];
  418 -> 419;
  417 -> 418;
  416 -> 417;
  420 [label=";"];
  416 -> 420;
  331 -> 416;
  330 -> 331;
  329 -> 330;
  421 [label="END"];
  329 -> 421;
  296 -> 329;
  422 [label="statement"];
  423 [label="single_statement"];
  424 [label="function_call"];
  425 [label="id"];
  426 [label="towerOfHanoi"];
  425 -> 426;
  424 -> 425;
  427 [label="("];
  424 -> 427;
  428 [label="arguments"];
  429 [label="expression"];
  430 [label="arithmetic_expression"];
  431 [label="arithmetic_expression"];
  432 [label="single_expression"];
  433 [label="id"];
  434 [label="n"];
  433 -> 434;
  432 -> 433;
  431 -> 432;
  430 -> 431;
  435 [label="arith_operator"];
  436 [label="sub"];
  437 [label="-"];
  436 -> 437;
  435 -> 436;
  430 -> 435;
  438 [label="arithmetic_expression"];
  439 [label="single_expression"];
  440 [label="constant"];
  441 [label="1"];
  440 -> 441;
  439 -> 440;
  438 -> 439;
  430 -> 438;
  429 -> 430;
  428 -> 429;
  442 [label=","];
  428 -> 442;
  443 [label="expression"];
  444 [label="single_expression"];
  445 [label="id"];
  446 [label="a"];
  445 -> 446;
  444 -> 445;
  443 -> 444;
  428 -> 443;
  447 [label=","];
  428 -> 447;
  448 [label="expression"];
  449 [label="single_expression"];
  450 [label="id"];
  451 [label="c"];
  450 -> 451;
  449 -> 450;
  448 -> 449;
  428 -> 448;
  452 [label=","];
  428 -> 452;
  453 [label="expression"];
  454 [label="single_expression"];
  455 [label="id"];
  456 [label="b"];
  455 -> 456;
  454 -> 455;
  453 -> 454;
  428 -> 453;
  424 -> 428;
  457 [label=")"];
  424 -> 457;
  423 -> 424;
  422 -> 423;
  458 [label=";"];
  422 -> 458;
  296 -> 422;
  459 [label="statement"];
  460 [label="single_statement"];
  461 [label="printing_statement"];
  462 [label="printf_statement"];
  463 [label="PRINTF"];
  462 -> 463;
  464 [label="("];
  462 -> 464;
  465 [label="\"Move disk {} from {} to {}\\n\""];
  462 -> 465;
  466 [label=","];
  462 -> 466;
  467 [label="arguments"];
  468 [label="expression"];
  469 [label="single_expression"];
  470 [label="id"];
  471 [label="n"];
  470 -> 471;
  469 -> 470;
  468 -> 469;
  467 -> 468;
  472 [label=","];
  467 -> 472;
  473 [label="expression"];
  474 [label="single_expression"];
  475 [label="id"];
  476 [label="a"];
  475 -> 476;
  474 -> 475;
  473 -> 474;
  467 -> 473;
  477 [label=","];
  467 -> 477;
  478 [label="expression"];
  479 [label="single_expression"];
  480 [label="id"];
  481 [label="c"];
  480 -> 481;
  479 -> 480;
  478 -> 479;
  467 -> 478;
  462 -> 467;
  482 [label=")"];
  462 -> 482;
  461 -> 462;
  460 -> 461;
  459 -> 460;
  483 [label=";"];
  459 -> 483;
  296 -> 459;
  484 [label="statement"];
  485 [label="single_statement"];
  486 [label="single_declaration"];
  487 [label="variable_declaration"];
  488 [label="data_type"];
  489 [label="integer"];
  490 [label="int"];
  489 -> 490;
  488 -> 489;
  487 -> 488;
  491 [label="id"];
  492 [label="x"];
  491 -> 492;
  487 -> 491;
  493 [label="assign"];
  494 [label="="];
  493 -> 494;
  487 -> 493;
  495 [label="expression"];
  496 [label="single_expression"];
  497 [label="function_call"];
  498 [label="id"];
  499 [label="pop"];
  498 -> 499;
  497 -> 498;
  500 [label="("];
  497 -> 500;
  501 [label="arguments"];
  502 [label="expression"];
  503 [label="single_expression"];
  504 [label="id"];
  505 [label="a"];
  504 -> 505;
  503 -> 504;
  502 -> 503;
  501 -> 502;
  497 -> 501;
  506 [label=")"];
  497 -> 506;
  496 -> 497;
  495 -> 496;
  487 -> 495;
  486 -> 487;
  485 -> 486;
  484 -> 485;
  507 [label=";"];
  484 -> 507;
  296 -> 484;
  508 [label="statement"];
  509 [label="single_statement"];
  510 [label="function_call"];
  511 [label="id"];
  512 [label="push"];
  511 -> 512;
  510 -> 511;
  513 [label="("];
  510 -> 513;
  514 [label="arguments"];
  515 [label="expression"];
  516 [label="single_expression"];
  517 [label="id"];
  518 [label="c"];
  517 -> 518;
  516 -> 517;
  515 -> 516;
  514 -> 515;
  519 [label=","];
  514 -> 519;
  520 [label="expression"];
  521 [label="single_expression"];
  522 [label="id"];
  523 [label="x"];
  522 -> 523;
  521 -> 522;
  520 -> 521;
  514 -> 520;
  510 -> 514;
  524 [label=")"];
  510 -> 524;
  509 -> 510;
  508 -> 509;
  525 [label=";"];
  508 -> 525;
  296 -> 508;
  526 [label="statement"];
  527 [label="single_statement"];
  528 [label="function_call"];
  529 [label="id"];
  530 [label="print_stacks"];
  529 -> 530;
  528 -> 529;
  531 [label="("];
  528 -> 531;
  532 [label=")"];
  528 -> 532;
  527 -> 528;
  526 -> 527;
  533 [label=";"];
  526 -> 533;
  296 -> 526;
  534 [label="statement"];
  535 [label="single_statement"];
  536 [label="function_call"];
  537 [label="id"];
  538 [label="towerOfHanoi"];
  537 -> 538;
  536 -> 537;
  539 [label="("];
  536 -> 539;
  540 [label="arguments"];
  541 [label="expression"];
  542 [label="arithmetic_expression"];
  543 [label="arithmetic_expression"];
  544 [label="single_expression"];
  545 [label="id"];
  546 [label="n"];
  545 -> 546;
  544 -> 545;
  543 -> 544;
  542 -> 543;
  547 [label="arith_operator"];
  548 [label="sub"];
  549 [label="-"];
  548 -> 549;
  547 -> 548;
  542 -> 547;
  550 [label="arithmetic_expression"];
  551 [label="single_expression"];
  552 [label="constant"];
  553 [label="1"];
  552 -> 553;
  551 -> 552;
  550 -> 551;
  542 -> 550;
  541 -> 542;
  540 -> 541;
  554 [label=","];
  540 -> 554;
  555 [label="expression"];
  556 [label="single_expression"];
  557 [label="id"];
  558 [label="b"];
  557 -> 558;
  556 -> 557;
  555 -> 556;
  540 -> 555;
  559 [label=","];
  540 -> 559;
  560 [label="expression"];
  561 [label="single_expression"];
  562 [label="id"];
  563 [label="a"];
  562 -> 563;
  561 -> 562;
  560 -> 561;
  540 -> 560;
  564 [label=","];
  540 -> 564;
  565 [label="expression"];
  566 [label="single_expression"];
  567 [label="id"];
  568 [label="c"];
  567 -> 568;
  566 -> 567;
  565 -> 566;
  540 -> 565;
  536 -> 540;
  569 [label=")"];
  536 -> 569;
  535 -> 536;
  534 -> 535;
  570 [label=";"];
  534 -> 570;
  296 -> 534;
  295 -> 296;
  294 -> 295;
  293 -> 294;
  571 [label="END"];
  293 -> 571;
  1 -> 293;
  572 [label="statement"];
  573 [label="single_statement"];
  574 [label="single_declaration"];
  575 [label="variable_declaration"];
  576 [label="data_type"];
  577 [label="integer"];
  578 [label="int"];
  577 -> 578;
  576 -> 577;
  575 -> 576;
  579 [label="id"];
  580 [label="n"];
  579 -> 580;
  575 -> 579;
  581 [label="assign"];
  582 [label="="];
  581 -> 582;
  575 -> 581;
  583 [label="expression"];
  584 [label="single_expression"];
  585 [label="constant"];
  586 [label="4"];
  585 -> 586;
  584 -> 585;
  583 -> 584;
  575 -> 583;
  574 -> 575;
  573 -> 574;
  572 -> 573;
  587 [label=";"];
  572 -> 587;
  1 -> 572;
  588 [label="statement"];
  589 [label="single_statement"];
  590 [label="single_declaration"];
  591 [label="container_declaration"];
  592 [label="container_type"];
  593 [label="stack"];
  594 [label="STACK"];
  593 -> 594;
  592 -> 593;
  591 -> 592;
  595 [label="<"];
  591 -> 595;
  596 [label="data_type"];
  597 [label="integer"];
  598 [label="int"];
  597 -> 598;
  596 -> 597;
  591 -> 596;
  599 [label=">"];
  591 -> 599;
  600 [label="id"];
  601 [label="A"];
  600 -> 601;
  591 -> 600;
  602 [label=","];
  591 -> 602;
  603 [label="id"];
  604 [label="B"];
  603 -> 604;
  591 -> 603;
  605 [label=","];
  591 -> 605;
  606 [label="id"];
  607 [label="C"];
  606 -> 607;
  591 -> 606;
  590 -> 591;
  589 -> 590;
  588 -> 589;
  608 [label=";"];
  588 -> 608;
  1 -> 588;
  609 [label="statement"];
  610 [label="block_statement"];
  611 [label="loop_statement"];
  612 [label="for_statement"];
  613 [label="for_range_statement"];
  614 [label="FOR"];
  613 -> 614;
  615 [label="id"];
  616 [label="i"];
  615 -> 616;
  613 -> 615;
  617 [label="IN RANGE("];
  613 -> 617;
  618 [label="expression"];
  619 [label="single_expression"];
  620 [label="id"];
  621 [label="n"];
  620 -> 621;
  619 -> 620;
  618 -> 619;
  613 -> 618;
  622 [label=","];
  613 -> 622;
  623 [label="expression"];
  624 [label="single_expression"];
  625 [label="constant"];
  626 [label="0"];
  625 -> 626;
  624 -> 625;
  623 -> 624;
  613 -> 623;
  627 [label=","];
  613 -> 627;
  628 [label="expression"];
  629 [label="single_expression"];
  630 [label="constant"];
  631 [label="-1"];
  630 -> 631;
  629 -> 630;
  628 -> 629;
  613 -> 628;
  632 [label=")"];
  613 -> 632;
  633 [label=":"];
  613 -> 633;
  634 [label="statement"];
  635 [label="single_statement"];
  636 [label="method_call"];
  637 [label="id"];
  638 [label="A"];
  637 -> 638;
  636 -> 637;
  639 [label="."];
  636 -> 639;
  640 [label="id"];
  641 [label="push"];
  640 -> 641;
  636 -> 640;
  642 [label="("];
  636 -> 642;
  643 [label="arguments"];
  644 [label="expression"];
  645 [label="single_expression"];
  646 [label="id"];
  647 [label="i"];
  646 -> 647;
  645 -> 646;
  644 -> 645;
  643 -> 644;
  636 -> 643;
  648 [label=")"];
  636 -> 648;
  635 -> 636;
  634 -> 635;
  649 [label=";"];
  634 -> 649;
  613 -> 634;
  612 -> 613;
  611 -> 612;
  610 -> 611;
  609 -> 610;
  650 [label="END"];
  609 -> 650;
  1 -> 609;
  651 [label="statement"];
  652 [label="single_statement"];
  653 [label="function_call"];
  654 [label="id"];
  655 [label="print_stacks"];
  654 -> 655;
  653 -> 654;
  656 [label="("];
  653 -> 656;
  657 [label=")"];
  653 -> 657;
  652 -> 653;
  651 -> 652;
  658 [label=";"];
  651 -> 658;
  1 -> 651;
  659 [label="statement"];
  660 [label="single_statement"];
  661 [label="function_call"];
  662 [label="id"];
  663 [label="towerOfHanoi"];
  662 -> 663;
  661 -> 662;
  664 [label="("];
  661 -> 664;
  665 [label="arguments"];
  666 [label="expression"];
  667 [label="single_expression"];
  668 [label="id"];
  669 [label="n"];
  668 -> 669;
  667 -> 668;
  666 -> 667;
  665 -> 666;
  670 [label=","];
  665 -> 670;
  671 [label="expression"];
  672 [label="single_expression"];
  673 [label="constant"];
  674 [label="char_literal"];
  675 [label="'"];
  674 -> 675;
  676 [label="A"];
  674 -> 676;
  677 [label="'"];
  674 -> 677;
  673 -> 674;
  672 -> 673;
  671 -> 672;
  665 -> 671;
  678 [label=","];
  665 -> 678;
  679 [label="expression"];
  680 [label="single_expression"];
  681 [label="constant"];
  682 [label="char_literal"];
  683 [label="'"];
  682 -> 683;
  684 [label="B"];
  682 -> 684;
  685 [label="'"];
  682 -> 685;
  681 -> 682;
  680 -> 681;
  679 -> 680;
  665 -> 679;
  686 [label=","];
  665 -> 686;
  687 [label="expression"];
  688 [label="single_expression"];
  689 [label="constant"];
  690 [label="char_literal"];
  691 [label="'"];
  690 -> 691;
  692 [label="C"];
  690 -> 692;
  693 [label="'"];
  690 -> 693;
  689 -> 690;
  688 -> 689;
  687 -> 688;
  665 -> 687;
  661 -> 665;
  694 [label=")"];
  661 -> 694;
  660 -> 661;
  659 -> 660;
  695 [label=";"];
  659 -> 695;
  1 -> 659;
  696 [label="<EOF>"];
  1 -> 696;
}
